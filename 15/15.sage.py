

# This file was *autogenerated* from the file 15/15.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_3 = Integer(3)# Factoring with Cyclotomic Polynomials

from Crypto.Util.number import *
from sage.all import *

with open("15/output.txt", "r") as f:
    n = Integer(int(f.readline().split(" = ")[_sage_const_1 ]))
    e = Integer(int(f.readline().split(" = ")[_sage_const_1 ]))
    c = Integer(int(f.readline().split(" = ")[_sage_const_1 ]))

k = _sage_const_3 

R = Zmod(n)["x"]
while True:
    Q = R.quo(R.random_element(k))
    pp = gcd(ZZ(list(Q.random_element() ** n)[_sage_const_1 ]), n)
    if pp != _sage_const_1 :
        qq = sum([pp**i for i in range(k)])
        rr = n // (pp * qq)
        assert n == pp * qq * rr
        break
phi = (pp - _sage_const_1 ) * (qq - _sage_const_1 ) * (rr - _sage_const_1 )
d = pow(e, -_sage_const_1 , phi)
m = pow(c, d, n)
print(long_to_bytes(m))

